{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-type-documentation`\n\nA documentation module for RAML types (resources) using AMF data model.\n\n## Styling\n\n`<api-type-documentation>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--api-type-documentation` | Mixin applied to this elment | `{}`\n`--arc-font-headline` | Theme mixin, applied to the title | `{}`\n`--api-type-documentation-title` | Mixin applied to the title | `{}`\n`--api-type-documentation-title-narrow` | Mixin applied to the title in narrow layout | `{}`",
      "summary": "",
      "path": "api-type-documentation.js",
      "properties": [
        {
          "name": "aware",
          "type": "string | null | undefined",
          "description": "`raml-aware` scope property to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "type",
          "type": "(Object | Array)",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "typeTitle",
          "type": "string | null | undefined",
          "description": "Computed value, title of the type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "Computed value of method description from `method` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasCustomProperties",
          "type": "boolean | null | undefined",
          "description": "Computed value from current `method`. True if the model contains\ncustom properties (annotations in RAML).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isSchema",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when passed model represents a schema\n(like XML)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "Set to render a mobile friendly view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 7
            },
            "end": {
              "line": 147,
              "column": 8
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "mediaType",
          "type": "string | null | undefined",
          "description": "A media type to use to generate examples.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 7
            },
            "end": {
              "line": 151,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "mediaTypes",
          "type": "Array.<String>",
          "description": "A list of supported media types for the type.\nThis is used by `api-resource-example-document` to compute examples.\nIn practive it should be value of raml's `mediaType`.\n\nEach item in the array is just a name of thr media type.\n\nExample:\n\n```json\n[\"application/json\", \"application/xml\"]\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeTitle",
          "description": "Computes `typeTitle` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF model for data type"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeDescription",
          "description": "Computes `description` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF model for data type"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeIsSchema",
          "description": "Computes value for `isSchema` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 207,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiTypeDocumentation",
      "attributes": [
        {
          "name": "aware",
          "description": "`raml-aware` scope property to use.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 22
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "type",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 18
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "type-title",
          "description": "Computed value, title of the type.",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "Computed value of method description from `method` property.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-custom-properties",
          "description": "Computed value from current `method`. True if the model contains\ncustom properties (annotations in RAML).",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-schema",
          "description": "Computed value, true when passed model represents a schema\n(like XML)",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "narrow",
          "description": "Set to render a mobile friendly view.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 7
            },
            "end": {
              "line": 147,
              "column": 8
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "media-type",
          "description": "A media type to use to generate examples.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 7
            },
            "end": {
              "line": 151,
              "column": 24
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "media-types",
          "description": "A list of supported media types for the type.\nThis is used by `api-resource-example-document` to compute examples.\nIn practive it should be value of raml's `mediaType`.\n\nEach item in the array is just a name of thr media type.\n\nExample:\n\n```json\n[\"application/json\", \"application/xml\"]\n```",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 8
            },
            "end": {
              "line": 167,
              "column": 25
            }
          },
          "metadata": {},
          "type": "Array.<String>"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-type-documentation",
      "mixins": [
        "ApiElements.AmfHelperMixin"
      ]
    }
  ]
}
